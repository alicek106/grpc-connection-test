// Code generated by protoc-gen-go. DO NOT EDIT.
// source: message.proto

package messages

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type OrderRequest struct {
	Stuff                string   `protobuf:"bytes,1,opt,name=stuff,proto3" json:"stuff,omitempty"`
	Money                int32    `protobuf:"varint,2,opt,name=money,proto3" json:"money,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderRequest) Reset()         { *m = OrderRequest{} }
func (m *OrderRequest) String() string { return proto.CompactTextString(m) }
func (*OrderRequest) ProtoMessage()    {}
func (*OrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{0}
}

func (m *OrderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderRequest.Unmarshal(m, b)
}
func (m *OrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderRequest.Marshal(b, m, deterministic)
}
func (m *OrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderRequest.Merge(m, src)
}
func (m *OrderRequest) XXX_Size() int {
	return xxx_messageInfo_OrderRequest.Size(m)
}
func (m *OrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OrderRequest proto.InternalMessageInfo

func (m *OrderRequest) GetStuff() string {
	if m != nil {
		return m.Stuff
	}
	return ""
}

func (m *OrderRequest) GetMoney() int32 {
	if m != nil {
		return m.Money
	}
	return 0
}

type OrderResponse struct {
	Ip                   string   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Stuff                string   `protobuf:"bytes,2,opt,name=stuff,proto3" json:"stuff,omitempty"`
	Change               int32    `protobuf:"varint,3,opt,name=change,proto3" json:"change,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderResponse) Reset()         { *m = OrderResponse{} }
func (m *OrderResponse) String() string { return proto.CompactTextString(m) }
func (*OrderResponse) ProtoMessage()    {}
func (*OrderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{1}
}

func (m *OrderResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderResponse.Unmarshal(m, b)
}
func (m *OrderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderResponse.Marshal(b, m, deterministic)
}
func (m *OrderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderResponse.Merge(m, src)
}
func (m *OrderResponse) XXX_Size() int {
	return xxx_messageInfo_OrderResponse.Size(m)
}
func (m *OrderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OrderResponse proto.InternalMessageInfo

func (m *OrderResponse) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *OrderResponse) GetStuff() string {
	if m != nil {
		return m.Stuff
	}
	return ""
}

func (m *OrderResponse) GetChange() int32 {
	if m != nil {
		return m.Change
	}
	return 0
}

func init() {
	proto.RegisterType((*OrderRequest)(nil), "messages.OrderRequest")
	proto.RegisterType((*OrderResponse)(nil), "messages.OrderResponse")
}

func init() { proto.RegisterFile("message.proto", fileDescriptor_33c57e4bae7b9afd) }

var fileDescriptor_33c57e4bae7b9afd = []byte{
	// 173 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcd, 0x4d, 0x2d, 0x2e,
	0x4e, 0x4c, 0x4f, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x80, 0x72, 0x8b, 0x95, 0xac,
	0xb8, 0x78, 0xfc, 0x8b, 0x52, 0x52, 0x8b, 0x82, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0x44,
	0xb8, 0x58, 0x8b, 0x4b, 0x4a, 0xd3, 0xd2, 0x24, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0x20, 0x1c,
	0x90, 0x68, 0x6e, 0x7e, 0x5e, 0x6a, 0xa5, 0x04, 0x93, 0x02, 0xa3, 0x06, 0x6b, 0x10, 0x84, 0xa3,
	0xe4, 0xcb, 0xc5, 0x0b, 0xd5, 0x5b, 0x5c, 0x90, 0x9f, 0x57, 0x9c, 0x2a, 0xc4, 0xc7, 0xc5, 0x94,
	0x59, 0x00, 0xd5, 0xc9, 0x94, 0x59, 0x80, 0x30, 0x8c, 0x09, 0xd9, 0x30, 0x31, 0x2e, 0xb6, 0xe4,
	0x8c, 0xc4, 0xbc, 0xf4, 0x54, 0x09, 0x66, 0xb0, 0x69, 0x50, 0x9e, 0x91, 0x1b, 0x17, 0x07, 0xd8,
	0xb8, 0xcc, 0xbc, 0x74, 0x21, 0x2b, 0x2e, 0x56, 0x30, 0x5b, 0x48, 0x4c, 0x0f, 0xe6, 0x54, 0x3d,
	0x64, 0x77, 0x4a, 0x89, 0x63, 0x88, 0x43, 0xdc, 0xa0, 0xc4, 0x90, 0xc4, 0x06, 0xf6, 0xa3, 0x31,
	0x20, 0x00, 0x00, 0xff, 0xff, 0xcf, 0x87, 0x0a, 0x1e, 0xf4, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OrderingClient is the client API for Ordering service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OrderingClient interface {
	Order(ctx context.Context, in *OrderRequest, opts ...grpc.CallOption) (*OrderResponse, error)
}

type orderingClient struct {
	cc *grpc.ClientConn
}

func NewOrderingClient(cc *grpc.ClientConn) OrderingClient {
	return &orderingClient{cc}
}

func (c *orderingClient) Order(ctx context.Context, in *OrderRequest, opts ...grpc.CallOption) (*OrderResponse, error) {
	out := new(OrderResponse)
	err := c.cc.Invoke(ctx, "/messages.Ordering/Order", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OrderingServer is the server API for Ordering service.
type OrderingServer interface {
	Order(context.Context, *OrderRequest) (*OrderResponse, error)
}

// UnimplementedOrderingServer can be embedded to have forward compatible implementations.
type UnimplementedOrderingServer struct {
}

func (*UnimplementedOrderingServer) Order(ctx context.Context, req *OrderRequest) (*OrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Order not implemented")
}

func RegisterOrderingServer(s *grpc.Server, srv OrderingServer) {
	s.RegisterService(&_Ordering_serviceDesc, srv)
}

func _Ordering_Order_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderingServer).Order(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/messages.Ordering/Order",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderingServer).Order(ctx, req.(*OrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Ordering_serviceDesc = grpc.ServiceDesc{
	ServiceName: "messages.Ordering",
	HandlerType: (*OrderingServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Order",
			Handler:    _Ordering_Order_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "message.proto",
}
